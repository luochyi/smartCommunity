{"version":3,"sources":["webpack:///src/views/butler/page/src/views/butler/page/votingManagement.vue"],"names":[],"mappings":"AACA,uBACA,WAAA,CACA,WAAA,CACA,gBAAA,CACA,kBAAA,CACA,iBAAA,CACA,UAAA,CACA,wBACA","file":"chunk-2f808b9b.30e200ba.css","sourcesContent":["<style scoped>\n.tips {\n    margin: 20px;\n    height: 38px;\n    line-height: 38px;\n    background: #fafafa;\n    border-radius: 4px;\n    opacity: 0.8;\n    border: 1px solid #e8e8e8;\n}\n</style>\n<template>\n  <div class=\"main-content\">\n    <div class=\"main-titel\">\n      <span>投票管理</span>\n    </div>\n    <div class=\"tips\">\n      <p>\n        <span class=\"el-icon-warning-outline\"\n              style=\"margin:0 12px\"></span>\n        温馨提示：有\n        <span style=\"color:rgba(251, 71, 2, 1)\">{{count}}</span>\n        个投票即将开始\n      </p>\n    </div>\n    <div class=\"content\">\n      <!-- 查询重制 -->\n      <div class=\"\">\n        <button class=\"btn-orange\"\n                style=\"height:32px\"\n                @click=\"addvoting()\"><span> <i class=\"el-icon-plus\"></i>新增投票</span></button>\n        <VueTable ref=\"table\"\n                  :config='config'\n                  @tableCheck=\"tableCheck\">\n          <template slot=\"footer\">\n            <div class=\"table-footer\">\n              <button @click=\"edit(table_row)\">编辑</button>\n              <button @click=\"del(table_row)\">删除</button>\n              <button @click=\"voteDetails(table_row)\">详情</button>\n              <button @click=\"release(table_row)\">发布</button>\n              <!-- <button @click=\"del(table_row)\">删除</button> -->\n            </div>\n          </template>\n        </VueTable>\n      </div>\n    </div>\n    <addEidt :drawerTitle=\"addEidtDrawerTitle\"\n             ref=\"addEdit\"\n             @submitSuccess='submitSuccess'\n             @handleClose=\"addEidtHandleClose\"\n             :drawerVrisible='addEidt_vrisible'></addEidt>\n    <!-- 详情 -->\n    <detailsVrisible :drawerVrisible='details_vrisible'\n                     @handleClose='getClose'\n                     :voteId=\"detailId\"\n                     @details_obj=\"details_obj\"></detailsVrisible>\n    <!-- 详情详情 -->\n    <detailsDetails :drawerVrisible='details_details'\n                    :voteId=\"detailsDetailsId\"\n                    :detailsData='detailsDetailsData'\n                    @handleClose='getClose'\n                    @goBack='goBack'></detailsDetails>\n  </div>\n</template>\n\n<script>\nimport addEidt from '@/views/butler/components/votingManagement/add.vue'\nimport detailsVrisible from '@/views/butler/components/votingManagement/details.vue'\nimport detailsDetails from '@/views/butler/components/votingManagement/details/index.vue'\nimport {\n    voteCountVoteExpectedStart,\n    voteFindById,\n    voteRelease\n} from '@/api/butler'\nexport default {\n    components: {\n        addEidt,\n        detailsVrisible,\n        detailsDetails\n    },\n    data() {\n        return {\n            detailId: null,\n            detailsDetailsId: null,\n            detailsDetailsData: null,\n            addEidtDrawerTitle: '新增活动',\n            // 详情\n            details_vrisible: false,\n            // 详情——详情\n            details_details: false,\n            addEidt_vrisible: false,\n            // 选中表格数据\n            table_row: [],\n            config: {\n                thead: [\n                    { label: '序号', type: 'index', width: '80' },\n                    { label: '投票标题', prop: 'title', width: 'auto' },\n                    { label: '投票开始时间', prop: 'beginDate', width: 'auto' },\n                    { label: '投票结束时间', prop: 'endDate', width: 'auto' },\n                    {\n                        label: '活动状态',\n                        prop: 'status',\n                        width: 'auto',\n                        type: 'function',\n                        callback: (row, prop) => {\n                            switch (row.status) {\n                                case 1:\n                                    return '未开始'\n                                    break\n                                case 2:\n                                    return '进行中'\n                                    break\n                                case 3:\n                                    return '已结束'\n                                    break\n                                default:\n                                    break\n                            }\n                        }\n                    },\n                    { label: '投票结果', prop: 'voteResult', width: 'auto' }\n                ],\n                url: 'voteList',\n                table_data: [],\n                search_item: [],\n                data: {\n                    pageNum: 1,\n                    size: 10\n                }\n            },\n            // tab默认绑定\n            activeName: 0,\n            // 投票数量\n            count: null\n        }\n    },\n    mounted() {\n        this.getTipsData()\n    },\n    methods: {\n        // 即将开始投票活动\n        getTipsData() {\n            voteCountVoteExpectedStart().then((result) => {\n                // 投票数量\n                this.count = result.count\n            })\n        },\n        // 添加修改成功\n        submitSuccess() {\n            this.$refs.table.loadData()\n            this.getTipsData()\n        },\n        // 添加\n        addvoting() {\n            this.addEidt_vrisible = true\n        },\n        // 添加修改关闭\n        addEidtHandleClose() {\n            this.addEidt_vrisible = false\n        },\n        // 表格选中\n        tableCheck(arr) {\n            this.table_row = arr\n        },\n        voteDetails(data) {\n            if (data.length > 1) {\n                this.$message.error('只能查看一条数据的详情')\n                return\n            }\n            if (!data.length) {\n                this.$message.error('请选择')\n                return\n            }\n            this.detailId = this.table_row[0].id\n            this.details_vrisible = true\n        },\n        // 删除\n        del(data) {\n            if (data.length) {\n                let arr = []\n                for (let i = 0; i < this.table_row.length; i++) {\n                    arr.push(this.table_row[i].id)\n                }\n                this.$confirm('是否确认删除？删除不可恢复', '删除', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    confirmButtonClass: 'confirmButton',\n                    cancelButtonClass: 'cancelButton'\n                })\n                    .then(() => {\n                        this.$refs.table.tableDelete(arr)\n                    })\n                    .catch((action) => {})\n            } else {\n                this.$message.error('请选中需要删除的数据')\n            }\n        },\n        // 关闭抽屉\n        getClose(data) {\n            this.drawer_vrisible = false\n            this.details_vrisible = false\n            this.details_details = false\n        },\n        // 详情抽屉 详情\n        details_obj(data) {\n            this.details_vrisible = false\n            this.details_details = true\n            this.detailsDetailsId = data.id\n            this.detailsDetailsData = data\n            console.log(data)\n        },\n        //  详情抽屉 详情 返回\n        goBack() {\n            this.details_vrisible = true\n            this.details_details = false\n        },\n        // 编辑\n        edit(data) {\n            if (data.length > 1) {\n                this.$message.error('只能查看一条数据的详情')\n                return\n            }\n            if (!data.length) {\n                this.$message.error('请选择')\n                return\n            }\n            this.$refs.addEdit.edit(data[0].id)\n            this.addEidt_vrisible = true\n        },\n        // 发布\n        release(data) {\n            if (data.length) {\n                let arr = []\n                for (let i = 0; i < this.table_row.length; i++) {\n                    arr.push(this.table_row[i].id)\n                }\n                this.$confirm('是否确认发布', '批量发布', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    confirmButtonClass: 'confirmButton',\n                    cancelButtonClass: 'cancelButton'\n                })\n                    .then(() => {\n                        let resData = {\n                            ids: arr\n                        }\n                        voteRelease(resData).then((result) => {\n                            if (result.status) {\n                                this.$message({\n                                    message: result.message,\n                                    type: 'success'\n                                })\n                                this.$refs.table.loadData()\n                            }\n                        })\n                    })\n                    .catch((action) => {})\n            } else {\n                this.$message.error('请选中需要发布的数据')\n            }\n        }\n    }\n}\n</script>\n"]}