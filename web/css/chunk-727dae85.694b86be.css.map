{"version":3,"sources":["webpack:///src/components/editor/src/components/editor/editorBar.vue"],"names":[],"mappings":"AA2IA,QACA,UAAA,CACA,aAAA,CACA,iBAAA,CACA,SACA,CAIA,eAFA,qBAKA,CAHA,MAEA,YACA","file":"chunk-727dae85.694b86be.css","sourcesContent":["<template lang=\"html\">\n  <div class=\"editor\">\n    <div ref=\"toolbar\" class=\"toolbar\"></div>\n    <div ref=\"editor\" class=\"text\"></div>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\nexport default {\n  name: 'editorBar',\n  data () {\n    return {\n      // uploadPath,\n      editor: null,\n      info_: null\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    isClear: {\n      type: Boolean,\n      default: false\n    },\n    initialize1: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    isClear (val) {\n      // 触发清除文本域内容\n      if (val) {\n        this.editor.txt.clear()\n        this.info_ = null\n      }\n    }\n    // value为编辑框输入的内容，这里我监听了一下值，当父组件调用得时候，如果给value赋值了，子组件将会显示父组件赋给的值\n    // 这里有个bug，在输入的时候会移动光标\n    // value: function (value) {\n    //   if (value !== this.editor.txt.html()) {\n    //     this.editor.txt.html(this.value)\n    //   }\n    // }\n  },\n  mounted () {\n    this.seteditor()\n    this.value = ''\n    // var p = '#需求描述：<br />#任务分析：<br />#验收标准：<br />'\n    this.editor.txt.html(this.initialize1)\n  },\n  methods: {\n    // 父组件赋值内容\n    valueHtml (val) {\n      this.editor.txt.html(val)\n    },\n    // 父组件自动清空子组件的内容\n    clearHtml () {\n      this.editor.txt.html('')\n    },\n    seteditor () {\n      let mytoken = sessionStorage.getItem(\n        'X-Admin-Token'\n      )\n      this.editor = new E(this.$refs.toolbar, this.$refs.editor)\n      this.editor.customConfig.uploadImgShowBase64 = false // base 64 存储图片\n      this.editor.customConfig.uploadImgServer = 'http://192.168.2.201:8804/IntelligentCommunity/manage/upload/uploadVoteTitle' // 配置服务器端地址\n      this.editor.customConfig.uploadImgHeaders = {\n        'X-Admin-Token': mytoken\n      } // 自定义 header\n      this.editor.customConfig.uploadFileName = 'file' // 后端接受上传文件的参数名\n      this.editor.customConfig.uploadImgMaxSize = 2 * 1024 * 1024 // 将图片大小限制为 2M\n      this.editor.customConfig.uploadImgMaxLength = 6 // 限制一次最多上传 3 张图片\n      this.editor.customConfig.uploadImgTimeout = 3 * 60 * 1000 // 设置超时时间\n      // 配置菜单\n      this.editor.customConfig.menus = [\n        'head', // 标题\n        'bold', // 粗体\n        'fontSize', // 字号\n        'fontName', // 字体\n        'italic', // 斜体\n        'underline', // 下划线\n        'strikeThrough', // 删除线\n        'link', // 插入链接\n        'list', // 列表\n        'justify', // 对齐方式\n        'image', // 插入图片\n        'table', // 表格\n        'fullscreen' // 全屏\n      ]\n\n      this.editor.customConfig.uploadImgHooks = {\n        fail: (xhr, editor, result) => {\n          // 插入图片失败回调\n        },\n        success: (xhr, editor, result) => {\n          // 图片上传成功回调\n        },\n        timeout: (xhr, editor) => {\n          // 网络超时的回调\n        },\n        error: (xhr, editor) => {\n          // 图片上传错误的回调\n        },\n        customInsert: (insertImg, result, editor) => {\n          console.log(result, editor)\n          // 图片上传成功，插入图片的回调\n          // result为上传图片成功的时候返回的数据，这里我打印了一下发现后台返回的是data：[{url:\"路径的形式\"},...]\n          // console.log(result.data[0].url)\n          // insertImg()为插入图片的函数\n          // 循环插入图片\n          // for (let i = 0; i < 1; i++) {\n          // console.log(result)\n          for (var i = 0; i < result.length; i++) {\n            let url = lookImgUrl() + '/' + result[i]\n            insertImg(url)\n          }\n\n          // }\n        }\n      }\n      this.editor.customConfig.onchange = html => {\n        this.info_ = html // 绑定当前逐渐地值\n        this.$emit('change', this.info_) // 将内容同步到父组件中\n      }\n      // 创建富文本编辑器\n      this.editor.create()\n    }\n  }\n}\n</script>\n<style>\n.editor {\n    width: 100%;\n    margin: 0 auto;\n    position: relative;\n    z-index: 0;\n}\n.toolbar {\n    border: 1px solid #ccc;\n}\n.text {\n    border: 1px solid #ccc;\n    height: 164px;\n}\n</style>\n"]}